name: Fetch NSE PIT (30d)

on:
  schedule:
    - cron: "20 2 * * *"   # 02:20 UTC â‰ˆ 07:50 IST
  workflow_dispatch:

# avoid overlapping runs pushing on top of each other
concurrency:
  group: pit-fetch-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fetch:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0                 # full history so rebases work
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci || npm i
          npx playwright install --with-deps chromium

      - name: Run Playwright fetcher
        run: node scripts/pit_fetch.js

      - name: Configure git
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git config pull.rebase true

      # (optional) bring latest before we stage, harmless if up-to-date
      - name: Pull latest (pre-commit rebase)
        run: |
          git fetch origin ${{ github.ref_name }}
          git pull --rebase origin ${{ github.ref_name }} || true

      - name: Commit CSVs
        run: |
          git add -A data/*.csv
          # make the step no-op if nothing changed
          git diff --staged --quiet && echo "No changes" && exit 0 || true
          git commit -m "PIT update: $(date -u +%F)"

      # ðŸ”‘ rebase AGAIN after we just created our commit
      - name: Rebase onto remote (post-commit)
        run: |
          git fetch origin ${{ github.ref_name }}
          git pull --rebase --autostash origin ${{ github.ref_name }} || true

      - name: Push
        run: |
          git push origin HEAD:${{ github.ref_name }}

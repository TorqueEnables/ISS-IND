name: Backfill NSE Bhavcopy (90d)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  backfill:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Backfill last 120 calendar days and rebuild 90d
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p data/prices
          cd data/prices

          ua='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36'

          # Fetch up to 120 calendar days; keep any day NSE actually published.
          for i in $(seq 0 120); do
            d_arch=$(date -u -d "$i day ago" +'%d%b%Y')        # 24Oct2025
            d_file=$(date -u -d "$i day ago" +'%d%m%Y')        # 24102025
            url="https://archives.nseindia.com/products/content/sec_bhavdata_full_${d_arch}.csv"
            out="bhav_${d_file}.csv"

            # Skip if we already have it
            [[ -s "$out" ]] && continue

            echo "Try $url -> $out"
            if curl -fL --retry 5 --retry-delay 2 --retry-connrefused -A "$ua" -o tmp.csv "$url" 2>/dev/null; then
              # Validate header
              if head -n1 tmp.csv | grep -q '^SYMBOL'; then
                mv tmp.csv "$out"
                echo "Saved $out"
              else
                echo "Bad header for $out, skipping"; rm -f tmp.csv
              fi
            else
              echo "Not available: $url"
            fi
          done

          # Build bhav_latest_90d.csv from most recent 90 per-day files (oldest->newest)
          mapfile -t LASTN < <(
            ls -1 bhav_[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].csv 2>/dev/null \
            | sed -E 's#.*bhav_([0-9]{2})([0-9]{2})([0-9]{4}).csv#\3-\2-\1 & #' \
            | sort -r \
            | awk '{print $2}' \
            | head -n 90 \
            | tac
          )

          if [[ ${#LASTN[@]} -eq 0 ]]; then
            echo "No daily bhav_*.csv files present"; exit 1
          fi

          tmp_out=$(mktemp)
          { head -n1 "${LASTN[0]}"; for f in "${LASTN[@]}"; do tail -n +2 "$f"; done; } > "$tmp_out"
          mv "$tmp_out" bhav_latest_90d.csv

          # Also expose the newest daily as bhav_latest.csv
          cp -f "${LASTN[-1]}" bhav_latest.csv

      - name: Commit changes
        shell: bash
        run: |
          set -e
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name  "prices-bot"
            git config user.email "prices-bot@users.noreply.github.com"
            git add -A
            git commit -m "backfill(prices): rebuild 90d + latest $(date -u +%F)"
            git push
          else
            echo "No changes to commit."
          fi
